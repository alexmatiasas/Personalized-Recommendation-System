name: 🔁 Continuous Integration

on:
  push:
    branches: [develop, main]  # Trigger the workflow when code is pushed to develop or main
  pull_request:
    branches: [develop, main]  # Also trigger the workflow on pull requests targeting develop or main

jobs:
  build-and-test:
    name: 🧪 Lint & Test with Poetry
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner provided by GitHub Actions
    timeout-minutes: 15

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4  # Clone the repository into the GitHub Actions runner

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"  # Specify the Python version to use in the workflow

      - name: 📦 Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry  # Install Poetry as the dependency manager

      - name: 🔧 Configure Poetry virtualenv
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true  # Ensure virtual environment is created inside the project

      - name: 📥 Install dependencies
        run: poetry install --with dev  # Install project and development dependencies

      - name: ⚙️ Set up pre-commit
        run: |
          poetry run pre-commit install
          poetry run pre-commit run --all-files  # Run all pre-commit hooks on the codebase

      - name: 🧪 Run tests with coverage
        run: poetry run pytest --cov=src --cov-report=term-missing --cov-report=xml  # Run tests and generate coverage reports

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  # Use a GitHub secret to securely pass the Codecov token

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with: 
          node-version: "18"

      - name: Install Newman
        run: npm install -g newman

      - name: 🔥 Run Postman smoke tests with Newman
        run: |
          # Start the backend server in the background with nohup, bind to 0.0.0.0, and capture logs
          nohup poetry run uvicorn backend.main:app --host 0.0.0.0 --port 8000 > uvicorn.log 2>&1 &
          # Wait for the server to start
          sleep 5
          newman run postman/collections/movie-recommender-collection.json \
            --environment postman/environments/movie-recommender-env.json \
            --bail
